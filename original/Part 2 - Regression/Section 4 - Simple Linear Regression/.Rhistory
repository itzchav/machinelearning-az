install.packages("bitops")
install.packages("caTools")
install.packages("caTools")
install.packages("bitops")
install.packages("caTools")
install.packages("bitops")
install.packages("caTools")
install.packages("C:/Users/karli/Downloads/rtools44-6459-6401.exe", repos = NULL)
install.packages("caTools")
install.packages("caTools")
install.packages("caTools")
install.packages("bitops")
install.packages("caTools")
chooseCRANmirror()
install.packages("caTools")
source('D:/CursoML/original/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/Seccion_2.R')
source('D:/CursoML/original/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/Seccion_2.R')
getwd()
setwd(D:\CursoML\original\Part 1 - Data Preprocessing\Section 2 -------------------- Part 1 - Data Preprocessing --------------------)
setwd(D:\CursoML\original\Part 1 - Data Preprocessing\Section 2 -------------------- Part 1 - Data Preprocessing --------------------)
source('D:/CursoML/original/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/Seccion_2.R')
system("python \"D:/CursoML/original/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/Seccion2.py\"")
system("python \"D:/CursoML/original/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/Seccion2.py\"")
version
version
install.packages("ggplot2")
#Abrir dataset
dataset = read.csv('Salary_Data.csv')
library(caTools)
set.seed(123)
#Dividir en train y test
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
testing_set = subset(dataset, split == FALSE)
#Ajustar el modelo de regresión linea simple con el conjunto de entrenamiento
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
#summary(regressor)
y_pred = predict(regressor,newdata = testing_set)
install.packages("ggplot2")
#Validación de los resultados en el conjunto de entrenamiento
library(ggplot2)
ggplot2() +
goem_point(aes(x = training_set$YearsExperience, y = training_set$Salary), colour = "red")
dataset = read.csv('Salary_Data.csv')
library(caTools)
set.seed(123)
#Dividir en train y test
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
testing_set = subset(dataset, split == FALSE)
#Ajustar el modelo de regresión linea simple con el conjunto de entrenamiento
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
#summary(regressor)
y_pred = predict(regressor,newdata = testing_set)
#install.packages("ggplot2")
#Validación de los resultados en el conjunto de entrenamiento
library(ggplot2)
ggplot2() +
goem_point(aes(x = training_set$YearsExperience, y = training_set$Salary), colour = "red")
library("graphics", lib.loc="C:/Program Files/R/R-4.0.3/library")
library("grDevices", lib.loc="C:/Program Files/R/R-4.0.3/library")
install.packages("ggplot2")
version
install.packages("ggplot2")
install.packages("ggplot2", dependencies=TRUE)
library("graphics", lib.loc="C:/Program Files/R/R-4.0.3/library")
library("grDevices", lib.loc="C:/Program Files/R/R-4.0.3/library")
Sys.setenv(TMPDIR = "C:\Users\karli\Downloads\temp")
Sys.setenv(TMPDIR = "C:\Users\karli\Downloads\temp")
Sys.setenv(TMPDIR = "C:\users\karli\Downloads\temp")
Sys.setenv(TMPDIR = "C:\\Users\\karli\\Downloads\\temp")
install.packages("ggplot2")
install.packages("ggplot2", repos = "https://cran.r-project.org")
gcc --version
install.packages("ggplot2")
Sys.setenv(TMPDIR = "C:/Users/karli/AppData/Local/Temp")
install.packages("ggplot2")
#Abrir dataset
dataset = read.csv('Salary_Data.csv')
library(caTools)
#install.packages("ggplot2")
#Validación de los resultados en el conjunto de entrenamiento
library(ggplot2)
install.packages("ggplot2")
#Abrir dataset
dataset = read.csv('Salary_Data.csv')
setwd("D:/CursoML/original/Part 2 - Regression/Section 4 - Simple Linear Regression")
#Abrir dataset
dataset = read.csv('Salary_Data.csv')
library(caTools)
set.seed(123)
#Dividir en train y test
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
testing_set = subset(dataset, split == FALSE)
#Ajustar el modelo de regresión linea simple con el conjunto de entrenamiento
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
#summary(regressor)
y_pred = predict(regressor,newdata = testing_set)
#install.packages("ggplot2")
#Validación de los resultados en el conjunto de entrenamiento
library(ggplot2)
ggplot(training_set, aes(x = YearsExperience, y = Salary)) +
geom_point(colour = "red") +  # Graficar los puntos
geom_line(aes(x = YearsExperience, y = predict(regressor,newdata = training_set)), colour = "blue")  # Agregar la línea de regresión
